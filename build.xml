<project name="idm-blitz" default="main" xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="antlib:org.apache.ivy.ant ">

    <!--=================================
		Setting properties
		=================================-->
    <property name="fs" value="${file.separator}"/>
    <property name="ps" value="${path.separator}"/>
    <property name="play.version" value="2.1.1"/>
    <property name="sbt.dir" value="${basedir}${fs}tools${fs}sbt"/>
    <property name="sbt.launch.jar" value="${sbt.dir}${fs}sbt-launch.jar"/>

    <ivy:configure id="basic.settings" file="${basedir}${fs}ivysettings-basic.xml"/>
    <!--=================================
		Building of database adapter
		=================================-->
    <target name="db-adapter.build" description="builds db-adapter">
        <echo>Started building of db-adapter</echo>
    </target>

    <target name="db-adapter.test" description="test db-adapter" depends="db-adapter.build">
        <echo>Started testing of db-adapter</echo>
    </target>

    <target name="db-adapter" description="build and test db-adapter" depends="db-adapter.test">
        <echo>Started building and testing of db-adapter</echo>
    </target>

    <!--=================================
			Building of idp
		=================================-->
    <target name="idp.init">
        <property name="idp.dir" value="${basedir}${fs}idp"/>
        <property name="idp.dir.lib" value="${idp.dir}${fs}lib"/>
        <mkdir dir="${idp.dir.lib}"/>
        <ivy:resolve file="${idp.dir}${fs}ivy.xml"/>
        <ivy:retrieve pattern="${idp.dir.lib}/[artifact]-[type]-[revision].[ext]"/>
        <path id="idp.dir.lib.id">
            <fileset dir="${idp.dir.lib}"/>
        </path>
    </target>

    <!--=================================
				Building of idp-config
		=================================-->
    <target name="idp-config.init" depends="idp.init">
        <property name="idp-config.dir" value="${idp.dir}${fs}idp-config"/>
        <property name="idp-config.dir.src" value="${idp-config.dir}${fs}src${fs}main${fs}java"/>
        <property name="idp-config.dir.dest" value="${idp-config.dir}${fs}target"/>
        <property name="idp-config.dir.dest.classes" value="${idp-config.dir.dest}${fs}classes"/>
        <property name="idp-config.dir.lib" value="${idp-config.dir}${fs}lib"/>
        <mkdir dir="${idp-config.dir.dest}"/>
        <mkdir dir="${idp-config.dir.dest.classes}"/>
    </target>

    <target name="idp-config.build" depends="idp-config.init">
        <javac srcdir="${idp-config.dir.src}" destdir="${idp-config.dir.dest.classes}" classpathref="idp.dir.lib.id"
               includeantruntime="true"/>
        <jar destfile="${idp-config.dir.dest}${fs}idp-config.jar" basedir="${idp-config.dir.dest.classes}"/>
    </target>

    <target name="idp-config.clean" depends="idp-config.init">
        <delete dir="${idp-config.dir.dest}"/>
    </target>

    <!--=================================
		Building of netty-servlet-bridge (nsb)
		=================================-->
    <target name="nsb.init" depends="idp-config.init">
        <property name="nsb.dir" value="${idp.dir}${fs}netty-servlet-bridge"/>
        <property name="nsb.dir.src" value="${nsb.dir}${fs}src${fs}main${fs}java"/>
        <property name="nsb.dir.dest" value="${nsb.dir}${fs}target"/>
        <property name="nsb.dir.dest.classes" value="${nsb.dir.dest}${fs}classes"/>
        <property name="nsb.dir.lib" value="${nsb.dir}${fs}lib"/>
        <mkdir dir="${nsb.dir.dest}"/>
        <mkdir dir="${nsb.dir.dest.classes}"/>
    </target>

    <target name="nsb.build" depends="nsb.init, idp-config.build">
        <javac srcdir="${nsb.dir.src}" destdir="${nsb.dir.dest.classes}"
               classpath="${idp-config.dir.dest}${fs}idp-config.jar" classpathref="idp.dir.lib.id"
               includeantruntime="true">
        </javac>
        <jar destfile="${nsb.dir.dest}${fs}netty-servlet-bridge.jar" basedir="${nsb.dir.dest.classes}"/>
    </target>

    <target name="nsb.clean" depends="nsb.init">
        <delete dir="${nsb.dir.dest}"/>
    </target>

    <!--=================================
		Building of shibboleth-common (sbc)
		=================================-->
    <target name="sbc.init" depends="idp-config.init">
        <property name="sbc.dir" value="${idp.dir}${fs}shibboleth-common"/>
        <property name="sbc.dir.src" value="${sbc.dir}${fs}src${fs}main${fs}java"/>
        <property name="sbc.dir.resources" value="${sbc.dir}${fs}src${fs}main${fs}resources"/>
        <property name="sbc.dir.dest" value="${sbc.dir}${fs}target"/>
        <property name="sbc.dir.dest.classes" value="${sbc.dir.dest}${fs}classes"/>
        <property name="sbc.dir.lib" value="${sbc.dir}${fs}lib"/>
        <mkdir dir="${sbc.dir.dest}"/>
        <mkdir dir="${sbc.dir.dest.classes}"/>
    </target>

    <target name="sbc.build" depends="sbc.init, idp-config.build">
        <javac srcdir="${sbc.dir.src}" destdir="${sbc.dir.dest.classes}"
               classpath="${idp-config.dir.dest}${fs}idp-config.jar" classpathref="idp.dir.lib.id"
               includeantruntime="true">
        </javac>
        <copy todir="${sbc.dir.dest.classes}">
            <fileset dir="${sbc.dir.resources}"/>
        </copy>
        <jar destfile="${sbc.dir.dest}${fs}shibboleth-common.jar" basedir="${sbc.dir.dest.classes}"/>
    </target>

    <target name="sbc.clean" depends="sbc.init">
        <delete dir="${sbc.dir.dest}"/>
    </target>

    <!--=================================
		Building of shibboleth-identityprovider (sip)
		=================================-->
    <target name="sip.init" depends="idp-config.init">
        <property name="sip.dir" value="${idp.dir}${fs}shibboleth-identityprovider"/>
        <property name="sip.dir.src" value="${sip.dir}${fs}src${fs}main${fs}java"/>
        <property name="sip.dir.resources" value="${sip.dir}${fs}src${fs}main${fs}resources"/>
        <property name="sip.dir.dest" value="${sip.dir}${fs}target"/>
        <property name="sip.dir.dest.classes" value="${sip.dir.dest}${fs}classes"/>
        <property name="sip.dir.lib" value="${sip.dir}${fs}lib"/>
        <mkdir dir="${sip.dir.dest}"/>
        <mkdir dir="${sip.dir.dest.classes}"/>
    </target>

    <target name="sip.build" depends="sip.init, sbc.build, idp-config.build">
        <javac srcdir="${sip.dir.src}" destdir="${sip.dir.dest.classes}"
               classpath="${idp-config.dir.dest}${fs}idp-config.jar${ps}${sbc.dir.dest}${fs}shibboleth-common.jar"
               classpathref="idp.dir.lib.id" includeantruntime="true">
        </javac>
        <copy todir="${sip.dir.dest.classes}">
            <fileset dir="${sip.dir.resources}"/>
        </copy>
        <jar destfile="${sip.dir.dest}${fs}shibboleth-identityprovider.jar" basedir="${sip.dir.dest.classes}"/>
    </target>

    <target name="sip.clean" depends="sip.init">
        <delete dir="${sip.dir.dest}"/>
    </target>

    <!--=================================
		Building of idp-netty
		=================================-->
    <target name="idp-netty.init" depends="idp-config.init">
        <property name="idp-netty.dir" value="${idp.dir}${fs}idp-netty"/>
        <property name="idp-netty.dir.src" value="${idp-netty.dir}${fs}src${fs}main${fs}java"/>
        <property name="idp-netty.dir.resources" value="${idp-netty.dir}${fs}src${fs}main${fs}resources"/>
        <property name="idp-netty.dir.webapp" value="${idp-netty.dir}${fs}src${fs}main${fs}webapp"/>
        <property name="idp-netty.dir.dest" value="${idp-netty.dir}${fs}target"/>
        <property name="idp-netty.dir.dest.classes" value="${idp-netty.dir.dest}${fs}classes"/>
        <property name="idp-netty.dir.lib" value="${idp-netty.dir}${fs}lib"/>
        <mkdir dir="${idp-netty.dir.dest}"/>
        <mkdir dir="${idp-netty.dir.dest.classes}"/>
    </target>

    <target name="idp-netty.build" depends="idp-netty.init, sip.build, sbc.build, nsb.build, idp-config.build">
        <javac srcdir="${idp-netty.dir.src}" destdir="${idp-netty.dir.dest.classes}"
               classpath="${idp-config.dir.dest}${fs}idp-config.jar${ps}${sbc.dir.dest}${fs}shibboleth-common.jar${ps}${sip.dir.dest}${fs}shibboleth-identityprovider.jar${ps}${nsb.dir.dest}${fs}netty-servlet-bridge.jar"
               classpathref="idp.dir.lib.id" includeantruntime="true">
        </javac>
        <copy todir="${idp-netty.dir.dest.classes}">
            <fileset dir="${idp-netty.dir.resources}"/>
            <fileset dir="${idp-netty.dir.webapp}"/>
        </copy>
        <jar destfile="${idp-netty.dir.dest}${fs}idp-netty.jar" basedir="${idp-netty.dir.dest.classes}"/>
    </target>

    <target name="idp-netty.clean" depends="idp-netty.init">
        <delete dir="${idp-netty.dir.dest}"/>
    </target>

    <target name="idp.build" description="builds idp" depends="idp-netty.build">
        <echo>Started building of IdP</echo>
    </target>

    <target name="idp.test" description="test idp" depends="idp.build">
        <echo>Started testing of db-adapter</echo>
    </target>

    <target name="idp" description="build and test idp" depends="idp.test">
        <echo>Started building and testing of db-adapter</echo>
    </target>

    <!--=================================
		Building of web-login
		==================================-->
    <target name="web-login.init">
        <echo>Started initializing of web-login</echo>

        <property name="web-login.dir" value="${basedir}${fs}web-login"/>
        <path id="sbt.boot.properties.path">
            <pathelement path="${sbt.dir}${fs}sbt.boot.properties"/>
        </path>
        <pathconvert targetos="unix" property="sbt.boot.properties" refid="sbt.boot.properties.path"/>
    </target>

    <target name="web-login.clean" description="cleans web-login" depends="web-login.init">
        <echo>Started cleaning of web-login</echo>
        <java jar="${sbt.launch.jar}" fork="true" failonerror="true" maxmemory="512M" dir="${web-login.dir}">
            <jvmarg value="-XX:+UseConcMarkSweepGC"/>
            <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
            <jvmarg value="-XX:PermSize=256M"/>
            <jvmarg value="-XX:MaxPermSize=512M"/>
            <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Dplay.version=${play.version}"/>
            <jvmarg value="-Dsbt.dir=${sbt.dir}"/>
            <jvmarg value="-Dsbt.boot.properties=file:///${sbt.boot.properties}"/>
            <jvmarg value="-Divy.settings.path=file:///${basedir}${fs}ivysettings-basic.xml"/>
            <jvmarg value="-Dplay.home=${play.home}"/>

            <arg value="clean"/>
        </java>
    </target>

    <target name="web-login.build" description="builds web-login" depends="web-login.init">
        <echo>Started building of web-login</echo>
        <java jar="${sbt.launch.jar}" fork="true" failonerror="true" maxmemory="2048M" dir="${web-login.dir}">
            <jvmarg value="-XX:+UseConcMarkSweepGC"/>
            <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
            <jvmarg value="-XX:PermSize=256M"/>
            <jvmarg value="-XX:MaxPermSize=2048M"/>
            <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Dplay.version=${path.separator}"/>
            <jvmarg value="-Dsbt.dir=${sbt.dir}"/>
            <jvmarg value="-Dsbt.boot.properties=file:///${sbt.boot.properties}"/>
            <jvmarg value="-Divy.settings.path=file:///${basedir}${fs}ivysettings-basic.xml"/>
            <jvmarg value="-Dplay.home=${play.home}"/>

            <arg value="compile"/>
            <arg value="stage"/>
        </java>
    </target>

    <target name="web-login.create-idea-project" description="create IDEA web-login project" depends="web-login.init">
        <echo>Started building of web-login</echo>
        <java jar="${sbt.launch.jar}" fork="true" failonerror="true" maxmemory="2048M" dir="${web-login.dir}">
            <jvmarg value="-XX:+UseConcMarkSweepGC"/>
            <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
            <jvmarg value="-XX:PermSize=256M"/>
            <jvmarg value="-XX:MaxPermSize=2048M"/>
            <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <jvmarg value="-Dplay.version=${path.separator}"/>
            <jvmarg value="-Dsbt.dir=${sbt.dir}"/>
            <jvmarg value="-Dsbt.boot.properties=file:///${sbt.boot.properties}"/>
            <jvmarg value="-Divy.settings.path=file:///${basedir}${fs}ivysettings-basic.xml"/>
            <jvmarg value="-Dplay.home=${play.home}"/>

            <arg value="play"/>
            <arg value="idea with-sources=yes"/>
        </java>
    </target>

    <target name="web-login.test" description="test web-login" depends="web-login.build">
        <echo>Started testing of web-login</echo>
        <echo>Hasn't realized yet!</echo>
    </target>

    <target name="web-login" description="build and test web-login" depends="web-login.test">
        <echo>Started building and testing of web-login</echo>
        <echo>Hasn't realized yet!</echo>
    </target>

    <target name="main">
        <echo>Has not realised yet!</echo>
    </target>

</project>
